name: Deploy Static Content to GitHub Pages

# Controls when the workflow should run
on:
  # Triggers the workflow on push events to the main branch
  push:
    branches: [ "main" ]
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions granted to the GITHUB_TOKEN
# This is required for deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This job handles the deployment
  deploy:
    # Use a standard Ubuntu runner
    runs-on: ubuntu-latest
    
    # Environment name, required for GitHub Pages deployment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Step 1: Checks-out your repository under $GITHUB_WORKSPACE
      - name: Checkout repository
        uses: actions/checkout@v4
        
      # Step 2: Set up a node environment (required by the actions/setup-pages action)
      - name: Setup Pages
        uses: actions/configure-pages@v5
        
      # Step 3: Upload the entire project directory as an artifact
      # Since your site is pure HTML/CSS/JS, the source files are the final build output.
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # This specifies the directory to upload. 
          # Since your Aroy.html, script.js, and sty.css are in the root, we use '.'
          path: '.'
          
      # Step 4: Deploy the uploaded artifact to GitHub Pages
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
